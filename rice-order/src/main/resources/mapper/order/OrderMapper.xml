<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.order.mapper.OrderMapper">

    <resultMap type="Order" id="OrderResult">
        <result property="orderId"    column="order_id"    />
        <result property="orderCode"    column="order_code"    />
        <result property="mealNumber"    column="meal_number"    />
        <result property="canteenId"    column="canteen_id"    />
        <result property="orderPrice"    column="order_price"    />
        <result property="status"    column="status"    />
        <result property="errorReason"    column="error_reason"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <resultMap id="mealNumberResultMap" type="Order">
        <result property="mealNumber" column="meal_number" />
    </resultMap>

    <resultMap id="OrderWeekAmountResultMap" type="Map">
        <result property="amount" column="amount"	/>
        <result property="createTime" column="create_time"	/>
    </resultMap>

    <resultMap id="OrderWeekMoneyAmountResultMap" type="Map">
        <result property="amount" column="amount"	/>
        <result property="createTime" column="create_time"	/>
    </resultMap>

    <sql id="selectOrderVo">
        select ro.order_id, ro.order_code, ro.meal_number, ro.canteen_id, ro.order_price,
        ro.status, ro.error_reason, ro.create_time
        from rice_order ro
    </sql>

    <select id="selectOrderList" parameterType="Order" resultMap="OrderResult">
        <include refid="selectOrderVo"/>
        <where>
            <if test="orderCode != null  and orderCode != ''"> and order_code like concat('%', #{orderCode}, '%')</if>
            <if test="mealNumber != null  and mealNumber != ''"> and meal_number = #{mealNumber}</if>
            <if test="timeList != null "> and create_time between #{timeList[0]} and #{timeList[1]}</if>
        </where>
    </select>

    <select id="selectOrderByOrderId" parameterType="Long" resultMap="OrderResult">
        <include refid="selectOrderVo"/>
        where ro.order_id = #{orderId}
    </select>

    <insert id="insertOrder" parameterType="Order" useGeneratedKeys="true" keyProperty="orderId">
        insert into rice_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderCode != null">order_code,</if>
            <if test="mealNumber != null">meal_number,</if>
            <if test="canteenId != null">canteen_id,</if>
            <if test="orderPrice != null">order_price,</if>
            <if test="orderPaid != null">order_paid,</if>
            <if test="errorReason != null">error_reason,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderCode != null">#{orderCode},</if>
            <if test="mealNumber != null">#{mealNumber},</if>
            <if test="canteenId != null">#{canteenId},</if>
            <if test="orderPrice != null">#{orderPrice},</if>
            <if test="orderPaid != null">#{orderPaid},</if>
            <if test="errorReason != null">#{errorReason},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateOrder" parameterType="Order">
        update rice_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderCode != null">order_code = #{orderCode},</if>
            <if test="canteenId != null">canteen_id = #{canteenId},</if>
            <if test="orderPrice != null">order_price = #{orderPrice},</if>
            <if test="orderPaid != null">order_paid = #{orderPaid},</if>
            <if test="status != null">status = #{status},</if>
            <if test="errorReason != null">error_reason = #{errorReason},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where order_id = #{orderId}
    </update>

    <delete id="deleteOrderByOrderId" parameterType="Long">
        delete from rice_order where order_id = #{orderId}
    </delete>

    <delete id="deleteOrderByOrderIds" parameterType="String">
        delete from rice_order where order_id in
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <select id="selectLastMealNumberInToday" resultMap="mealNumberResultMap">
        select meal_number from rice_order
        where to_days(create_time) = to_days(now())
        order by meal_number desc limit 1
    </select>

    <select id="selectOrderAmount" resultType="int">
        select COUNT(*) from rice_order
        <where>
            del_flag=0 and status in(0,1)
        </where>
    </select>

    <select id="selectWeekOrderAmount" resultMap="OrderWeekAmountResultMap">
        SELECT t1.`day` AS create_time, COUNT(t2.create_time) amount
		FROM(
		    SELECT @cdate := DATE_ADD(@cdate, INTERVAL - 1 DAY) `day`
			FROM(
				SELECT
				@cdate := DATE_ADD(DATE(now()), INTERVAL + 1 DAY)
				FROM
				sys_logininfor) t0
				LIMIT 7
			) t1
		LEFT JOIN(
			SELECT DATE(a.create_time) create_time
			FROM rice_order a
			WHERE a.del_flag=0 and a.status in(0,1)
		) t2
		ON t2.create_time = t1.`day`
		GROUP BY t1.`day`
		ORDER BY t1.`day`
    </select>

    <select id="selectOrderMoneyAmount" resultType="BigDecimal">
        select SUM(order_paid) from rice_order
    </select>

    <select id="selectWeekOrderMoneyAmount" resultMap="OrderWeekMoneyAmountResultMap">
        SELECT t1.`day` AS create_time, IFNULL(SUM(t2.order_paid),0) amount
		FROM(
		    SELECT @cdate := DATE_ADD(@cdate, INTERVAL - 1 DAY) `day`
			FROM(
				SELECT
				@cdate := DATE_ADD(DATE(now()), INTERVAL + 1 DAY)
				FROM
				sys_logininfor) t0
				LIMIT 7
			) t1
		LEFT JOIN(
			SELECT DATE(a.create_time) create_time,order_paid
			FROM rice_order a
			WHERE a.del_flag=0 and a.status in(0,1)
		) t2
		ON t2.create_time = t1.`day`
		GROUP BY t1.`day`
		ORDER BY t1.`day`
    </select>
</mapper>
